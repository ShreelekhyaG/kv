<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.stackroute</groupId>
	<artifactId>movie-cruiser-app</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>movie-cruiser-app</name>
	<description>Demo project for Spring Boot</description>


	<parent>
		<groupId>com.stackroute</groupId>
		<artifactId>knowledge-vault-parent</artifactId>
		<version>1.0-SNAPSHOT</version>
		<relativePath>../../knowledge-vault</relativePath>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>10</java.version>
		<argLine>-Xmx1024m -XX:MaxPermSize=256m</argLine>
		<!-- Used to locate the profile specific configuration file. -->
		<build.profile.id>dev</build.profile.id>
		<jacoco.it.execution.data.file>${project.build.directory}/coverage-reports/jacoco-it.exec</jacoco.it.execution.data.file>
		<jacoco.ut.execution.data.file>${project.build.directory}/coverage-reports/jacoco-ut.exec</jacoco.ut.execution.data.file>
		<jdk.version>1.7</jdk.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Only unit tests are run by default. -->
		<skip.integration.tests>true</skip.integration.tests>
		<skip.unit.tests>false</skip.unit.tests>
	</properties>


	<dependencies>
		<dependency>
			<groupId>com.netflix.ribbon</groupId>
			<artifactId>ribbon</artifactId>
			<version>2.2.2</version>
		</dependency>
		<!--<dependency>-->
		<!--<groupId>org.springframework.boot</groupId>-->
		<!--<artifactId>spring-boot-starter-data-jpa</artifactId>-->
		<!--</dependency>-->
		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-mongodb -->
		<!--<dependency>-->
		<!--<groupId>org.springframework.boot</groupId>-->
		<!--<artifactId>spring-boot-starter-data-mongodb</artifactId>-->
		<!--</dependency>-->
		<!--<dependency>-->
		<!--<groupId>de.flapdoodle.embed</groupId>-->
		<!--<artifactId>de.flapdoodle.embed.mongo</artifactId>-->
		<!--<scope>test</scope>-->
		<!--</dependency>-->
		<!--<dependency>-->
		<!--<groupId>cz.jirutka.spring</groupId>-->
		<!--<artifactId>embedmongo-spring</artifactId>-->
		<!--<version>RELEASE</version>-->
		<!--</dependency>-->

		<!--<dependency>-->
		<!--<groupId>org.springframework.boot</groupId>-->
		<!--<artifactId>spring-boot-starter-web</artifactId>-->
		<!--</dependency>-->

		<!--&lt;!&ndash;<dependency>&ndash;&gt;-->
		<!--&lt;!&ndash;<groupId>com.h2database</groupId>&ndash;&gt;-->
		<!--&lt;!&ndash;<artifactId>h2</artifactId>&ndash;&gt;-->
		<!--&lt;!&ndash;<scope>runtime</scope>&ndash;&gt;-->
		<!--&lt;!&ndash;</dependency>&ndash;&gt;-->
		<!--<dependency>-->
		<!--<groupId>org.springframework.boot</groupId>-->
		<!--<artifactId>spring-boot-starter-test</artifactId>-->
		<!--<scope>test</scope>-->
		<!--</dependency>-->
		<!--<dependency>-->
		<!--<groupId>javax.xml.bind</groupId>-->
		<!--<artifactId>jaxb-api</artifactId>-->
		<!--<version>2.3.0</version>-->
		<!--</dependency>-->
		<!--&lt;!&ndash; https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310 &ndash;&gt;-->
		<!--<dependency>-->
		<!--<groupId>com.fasterxml.jackson.datatype</groupId>-->
		<!--<artifactId>jackson-datatype-jsr310</artifactId>-->
		<!--<version>2.9.5</version>-->
		<!--</dependency>-->
		<!--<dependency>-->
		<!--<groupId>io.springfox</groupId>-->
		<!--<artifactId>springfox-swagger2</artifactId>-->
		<!--<version>2.8.0</version>-->

		<!--</dependency>-->

		<!--<dependency>-->
		<!--<groupId>io.springfox</groupId>-->
		<!--<artifactId>springfox-swagger-ui</artifactId>-->
		<!--<version>2.8.0</version>-->
		<!--</dependency>-->
		<!--<dependency>-->
		<!--<groupId>org.springframework.boot</groupId>-->
		<!--<artifactId>spring-boot-starter-data-jpa</artifactId>-->
		<!--</dependency>-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>


		<!--h2-->

		<!--<dependency>-->
		<!--<groupId>com.h2database</groupId>-->
		<!--<artifactId>h2</artifactId>-->
		<!--<scope>runtime</scope>-->
		<!--</dependency>-->

		<!--<dependency>-->
		<!--<groupId>com.h2database</groupId>-->
		<!--<artifactId>h2</artifactId>-->
		<!--<scope>runtime</scope>-->
		<!--</dependency>-->

		<!--my-sql-->

		<!-- https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api -->
		<!--<dependency>-->
		<!--<groupId>org.springframework.boot</groupId>-->
		<!--<artifactId>spring-boot-starter-data-jpa</artifactId>-->
		<!--</dependency>-->
		<!--<dependency>-->
		<!--<groupId>org.springframework.boot</groupId>-->
		<!--<artifactId>spring-boot-starter-jdbc</artifactId>-->
		<!--</dependency>-->
		<!--<dependency>-->
		<!--<groupId>mysql</groupId>-->
		<!--<artifactId>mysql-connector-java</artifactId>-->
		<!--<scope>runtime</scope>-->
		<!--</dependency>-->

		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310 -->
		<!--<dependency>-->
		<!--<groupId>com.fasterxml.jackson.datatype</groupId>-->
		<!--<artifactId>jackson-datatype-jsr310</artifactId>-->
		<!--<version>2.9.5</version>-->
		<!--</dependency>-->
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<version>2.4.0</version>
		</dependency>

		<!--<dependency>-->
		<!--<groupId>org.springframework</groupId>-->
		<!--<artifactId>spring-jdbc</artifactId>-->
		<!--</dependency>-->

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.8.0</version>

		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.8.0</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.hibernate.javax.persistence/hibernate-jpa-2.1-api -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.1-api</artifactId>
			<version>1.0.0.Final</version>
		</dependency>



		<!--<dependency>-->
		<!--<groupId>de.flapdoodle.embed</groupId>-->
		<!--<artifactId>de.flapdoodle.embed.mongo</artifactId>-->
		<!--<scope>runtime</scope>-->
		<!--</dependency>-->
		<!--<dependency>-->
		<!--<groupId>org.springframework.data</groupId>-->
		<!--<artifactId>spring-data-commons</artifactId>-->
		<!--<version>2.0.5.RELEASE</version>-->
		<!--</dependency>-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>

		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
		</dependency>

		<!--for tests-->
		<dependency>
			<groupId>de.flapdoodle.embed</groupId>
			<artifactId>de.flapdoodle.embed.mongo</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>cz.jirutka.spring</groupId>
			<artifactId>embedmongo-spring</artifactId>
			<version>RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
			<version>2.0.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-config-client</artifactId>
			<version>2.0.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
		</dependency>
	</dependencies>
	<!--<dependencyManagement>-->
	<!--<dependencies>-->
	<!--<dependency>-->
	<!--<groupId>org.springframework.cloud</groupId>-->
	<!--<artifactId>spring-cloud-dependencies</artifactId>-->
	<!--<version>${spring-cloud.version}</version>-->
	<!--<type>pom</type>-->
	<!--<scope>import</scope>-->
	<!--</dependency>-->

	<!--</dependencies>-->
	<!--</dependencyManagement>-->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<!-- Import dependency management from Spring Boot -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>2.0.6.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.2</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<!--<configuration>-->
					<!--&lt;!&ndash; Sets the VM argument line used when unit tests are run. &ndash;&gt;-->
					<!--&lt;!&ndash;suppress UnresolvedMavenProperty &ndash;&gt;-->
					<!--<argLine>${surefireArgLine}</argLine>-->
					<!--&lt;!&ndash; Skips unit tests if the value of skip.unit.tests property is true &ndash;&gt;-->
					<!--&lt;!&ndash;suppress UnresolvedMavenProperty &ndash;&gt;-->
					<!--<skipTests>${skip.unit.tests}</skipTests>-->
					<!--&lt;!&ndash; Excludes integration tests when unit tests are run. &ndash;&gt;-->
					<!--<excludes>-->
						<!--<exclude>**/IT*.java</exclude>-->
					<!--</excludes>-->
				<!--</configuration>-->
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.2</version>
				<configuration>
					<destFile>${basedir}/target/coverage-reports/jacoco-unit.exec</destFile>
					<dataFile>${basedir}/target/coverage-reports/jacoco-unit.exec</dataFile>
				</configuration>
				<executions>
					<execution>
						<id>jacoco-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-site</id>
						<phase>package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!--<plugin>-->
				<!--<groupId>org.jacoco</groupId>-->
				<!--<artifactId>jacoco-maven-plugin</artifactId>-->
				<!--<version>0.7.7.201606060606</version>-->
				<!--<executions>-->
					<!--&lt;!&ndash;-->
                        <!--Prepares the property pointing to the JaCoCo runtime agent which-->
                        <!--is passed as VM argument when Maven the Surefire plugin is executed.-->
                    <!--&ndash;&gt;-->
					<!--<execution>-->
						<!--<id>pre-unit-test</id>-->
						<!--<goals>-->
							<!--<goal>prepare-agent</goal>-->
						<!--</goals>-->
						<!--<configuration>-->
							<!--&lt;!&ndash; Sets the path to the file which contains the execution data. &ndash;&gt;-->
							<!--<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>-->
							<!--&lt;!&ndash;-->
                                <!--Sets the name of the property containing the settings-->
                                <!--for JaCoCo runtime agent.-->
                            <!--&ndash;&gt;-->
							<!--<propertyName>surefireArgLine</propertyName>-->
						<!--</configuration>-->
					<!--</execution>-->
					<!--&lt;!&ndash;-->
                        <!--Ensures that the code coverage report for unit tests is created after-->
                        <!--unit tests have been run.-->
                    <!--&ndash;&gt;-->
					<!--<execution>-->
						<!--<id>post-unit-test</id>-->
						<!--<phase>test</phase>-->
						<!--<goals>-->
							<!--<goal>report</goal>-->
						<!--</goals>-->
						<!--<configuration>-->
							<!--&lt;!&ndash; Sets the path to the file which contains the execution data. &ndash;&gt;-->
							<!--<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>-->
							<!--&lt;!&ndash; Sets the output directory for the code coverage report. &ndash;&gt;-->
							<!--<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>-->
						<!--</configuration>-->
					<!--</execution>-->
					<!--&lt;!&ndash;-->
            <!--Prepares the property pointing to the JaCoCo runtime agent which-->
            <!--is passed as VM argument when Maven the Failsafe plugin is executed.-->
        <!--&ndash;&gt;-->
					<!--<execution>-->
						<!--<id>pre-integration-test</id>-->
						<!--<phase>pre-integration-test</phase>-->
						<!--<goals>-->
							<!--<goal>prepare-agent</goal>-->
						<!--</goals>-->
						<!--<configuration>-->
							<!--&lt;!&ndash; Sets the path to the file which contains the execution data. &ndash;&gt;-->
							<!--<destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>-->
							<!--&lt;!&ndash;-->
                                <!--Sets the name of the property containing the settings-->
                                <!--for JaCoCo runtime agent.-->
                            <!--&ndash;&gt;-->
							<!--<propertyName>failsafeArgLine</propertyName>-->
						<!--</configuration>-->
					<!--</execution>-->
					<!--&lt;!&ndash;-->
                        <!--Ensures that the code coverage report for integration tests after-->
                        <!--integration tests have been run.-->
                    <!--&ndash;&gt;-->
					<!--<execution>-->
						<!--<id>post-integration-test</id>-->
						<!--<phase>post-integration-test</phase>-->
						<!--<goals>-->
							<!--<goal>report</goal>-->
						<!--</goals>-->
						<!--<configuration>-->
							<!--&lt;!&ndash; Sets the path to the file which contains the execution data. &ndash;&gt;-->
							<!--<dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>-->
							<!--&lt;!&ndash; Sets the output directory for the code coverage report. &ndash;&gt;-->
							<!--<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>-->
						<!--</configuration>-->
					<!--</execution>-->
				<!--</executions>-->
			<!--</plugin>-->

			<!--<plugin>-->
				<!--<groupId>org.springframework.boot</groupId>-->
				<!--<artifactId>spring-boot-maven-plugin</artifactId>-->
			<!--</plugin>-->
			<!--<plugin>-->
				<!--<groupId>org.apache.maven.plugins</groupId>-->
				<!--<artifactId>maven-compiler-plugin</artifactId>-->
				<!--<configuration>-->
					<!--<source>8</source>-->
					<!--<target>8</target>-->
				<!--</configuration>-->
			<!--</plugin>-->
			<!--<plugin>-->
				<!--<groupId>org.apache.maven.plugins</groupId>-->
				<!--<artifactId>maven-failsafe-plugin</artifactId>-->
				<!--<version>2.15</version>-->
				<!--<executions>-->
					<!--&lt;!&ndash;-->
                        <!--Ensures that both integration-test and verify goals of the Failsafe Maven-->
                        <!--plugin are executed.-->
                    <!--&ndash;&gt;-->
					<!--<execution>-->
						<!--<id>integration-tests</id>-->
						<!--<goals>-->
							<!--<goal>integration-test</goal>-->
							<!--<goal>verify</goal>-->
						<!--</goals>-->
						<!--<configuration>-->
							<!--&lt;!&ndash; Sets the VM argument line used when integration tests are run. &ndash;&gt;-->
							<!--&lt;!&ndash;suppress UnresolvedMavenProperty &ndash;&gt;-->
							<!--<argLine>${failsafeArgLine}</argLine>-->
							<!--&lt;!&ndash;-->
                                <!--Skips integration tests if the value of skip.integration.tests property-->
                                <!--is true-->
                            <!--&ndash;&gt;-->
							<!--&lt;!&ndash;suppress UnresolvedMavenProperty &ndash;&gt;-->
							<!--<skipTests>${skip.integration.tests}</skipTests>-->
						<!--</configuration>-->
					<!--</execution>-->
				<!--</executions>-->
			<!--</plugin>-->
		</plugins>
	</build>


</project>
